#include "listwindow.h"
#include "ui_listwindow.h"

const int dayJumps[] = {1, 5, 30, 90, 180, 365, 1825}; // 1d, 1w, 1m, 3m, 6m, 1y, 5y
const int maxJumps = sizeof(dayJumps)/sizeof(dayJumps[0]);


ListWindow::ListWindow(QWidget *parent, QTableWidget *stockListTableWidget, qint64 fromDate, qint64 toDate) :
    QWidget(parent),
    ui(new Ui::ListWindow),
    stockListTableWidget(stockListTableWidget),
    fromDate(fromDate),
    toDate(toDate)
{
    ui->setupUi(this);

    // Set up the table
    clearTable();

    // Set the limit
    ui->limitComboBox->addItems({"1D", "1W", "1M", "3M", "6M", "1Y", "5Y"});

    // Connect to yahoo finance
    connect(&yahooFinance, &YahooFinance::transmitDownloadResult, this, &ListWindow::receiveResult);
}

ListWindow::~ListWindow()
{
    delete ui;
}

void ListWindow::receiveResult(QByteArray data){  
    // Split the data
    QString text = QString(data);
    QStringList textRows = text.split('\n');

    // Check if we have more than two lines = available data
    int rowLength = textRows.length();
    if(rowLength > 1){
        // Prepare rows
        QString stockName = stockListTableWidget->item(receivedResults, 0)->text();
        ui->tableWidget->setRowCount(receivedResults+1);

        // Read all lines
        int dayIndex = 0;
        QList<float> closePrices;
        for(int i = rowLength; i >= 1; i--){
            // Jump to 1d, 1w, 1m, 3m, 6m, 1y, 5y
            i -= dayJumps[dayIndex++];

            // Add the close price
            QStringList row = textRows.at(i).split(',');
            float closePrice = row.at(4).toFloat();
            closePrices.append(closePrice);

            

            // This is important so we don't over indexing
            if(dayIndex >= maxJumps || dayIndex > ui->limitComboBox->currentIndex())
                break;
        }
        
        // Convert to percent
        for(int i = 0; i < closePrices.length(); i++){
            float lastClose
        }
        
        // Set the numbers
        ui->tableWidget->setItem(receivedResults, 0, new QTableWidgetItem(stockName));
        ui->tableWidget->setItem(receivedResults, dayIndex, new QTableWidgetItem(QString::number(closePrice)));

    }

    // Count
    receivedResults++;

    // Check
    int rows = stockListTableWidget->rowCount();
    if(rows > receivedResults){
        QString stockName = stockListTableWidget->item(receivedResults, 0)->text();
        yahooFinance.stockCSVDownload(stockName, fromDate, toDate); // When this is called, then this function receiveResult will be called too
    }else{
        qDebug() << "done";

        /* Analysstrategi:
             * Visa alla tillfällen: 1d, 1w, 1m, 3m, 6m, 1y, 5y
             * Omplacera grundat på de som har störst procentuella förändring, högst upp på toppen
             * */
    }


}

void ListWindow::on_sortPushButton_clicked()
{
    // Reset
    clearTable();
    receivedResults = 0;

    // This will trigger the download
    QString stockName = stockListTableWidget->item(0, 0)->text();
    yahooFinance.stockCSVDownload(stockName, fromDate, toDate);
}

void ListWindow::clearTable(){
    ui->tableWidget->clear();
    ui->tableWidget->setColumnCount(maxJumps + 1); // + 1 because the stock name column
    ui->tableWidget->setHorizontalHeaderLabels({"Stock name", "1D", "1W", "1M", "3M", "6M", "1Y", "5Y"});
}

